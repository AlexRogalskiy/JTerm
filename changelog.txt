[5/26/2017-18:23 0.1.0 Sergix]
	Made a few small updates to the Style Guide.
	Documentation Comments also describe command-line arguments (e.g. "-f", "-h") that are interpreted by the function.
	Updated more of the code to adapt to the Style Guide.
	Pushed updates to Git.

[5/25/2017-23:00 0.1.0 Sergix]
	Changed some of the code syntax to align with the new Source Code Style Guide.
	Pushed updates to Git.

[5/25/2017-18:29 0.1.0 Sergix]
	Created a Source Style Guide located at /docs/SourceStyleGuide.md
	Provides extensive information on how source code is to be formatted.
	Pushed updates to Git.

[5/24/2017-20:23 0.1.0 Sergix]
	Edited README with small changes and a new "Versioning" section.
	Version numbers now implement the "Semantic Versioning" specification (see README for details.)
	Changed the name of the pre-release jar to "jterm-v0.1.0.jar" to align with this specification.
	Updated the jar file in the GitHub "release"->"Prerelease" section on the project site.
	Changelog entries's version number has now changed from "pre-alpha" to "0.1.0". This doesn't admit any notable changes.
	Changelog entries (if not beforehand specified) must use the version number of the last released build. This is because we don't know if the next build will end up being a major, minor, or patch release, so it only seems logical to do this.
	Changed the format of build "src" and "changelog" files, as now specified in the README update. It only made sense that the naming conventions of all files published in a build remain similar.
	Edited the filenames of the pre-release build files. "vPrerelease-changelog.txt" -> "jterm-changelog-v0.1.0.txt"; "vPrerelease-src.zip" -> "jterm-src-v0.1.0.zip".
	Pushed updates to Git.

[5/23/2017-21:57 pre-alpha Sergix]
	Added arguments for commands.
	All class functions should take the "options" variable as the only argument.
	Class functions will loop through the options and take out what it needs as it needs it.
	A known error is in the Write class, where if you do not specify an filename when calling it, the program crashes.
	Pushed updates to Git.

[5/23/2017-20:48 pre-alpha Sergix]
	Updated the output of the "dir" command with some fancy output.
	Output details are listed in a comment block in Dir.java.
	Pushed updates to Git.

[5/23/2017-17:58 pre-alpha Sergix]
	Recieved approval to merge PR #2.
	Merged into master with changes:
		- Dir.java file
		- "dir [directory]" command added to JTerm.Standby()
	Pushed updates to Git.

[5/23/2017-16:32 pre-alpha Sergix]
	Add "dir" to runnable commands in JTerm class.
	Command syntax: dir [directory]
	When [directory] is not specified, the function defaults to the current directory (".").
	Running Travis builds at the moment. I have requested for review to merge the PR (#2) if successful.
	Pushed updates to Git.

[5/23/2017-8:40 pre-alpha Sergix]
	Create Dir.java file.
	Will contain all static methods related to directory functions.
	Created PrintDir method and opened a PR on the Dir branch.
	Travis CI ran some build tests... failed both. Checking imported libs.
	Pushed updates to Git.

[5/20/2017-13:45 pre-alpha Sergix]
	Made some changes to compile.sh for Travis builds.
	Changes to the file are no longer necessary as long as all source files stay in the current folder.
	Pushed updates to Git.

[5/19/2017-20:06 pre-alpha Sergix]
	Input is now read as an entire line (via BufferedReader) and then iterated through as smaller "tokens" or substrings, using spaces as delimiters.
	Removed class files from the Git folder, but keep them in your local project folder.
	Changed .gitignore to reject .class files.
	Pushed updates to Git.

[5/19/2017-19:47 pre-alpha Sergix]
	Actually got Travis CI to work. Made a custom shell script that compiles the classes into the build/classes folder.
	Added the compile.sh file for CI build scripts.
	Updated .travis.yml to work with the new parameters.
	Changed README to include build status image from Travis CI.
	Pushed updates to Git.

[5/18/2017-17:23 pre-alpha Sergix]
	Attempting a different CI: CircleCI.
	Already started building the project... hopefully everything sails smoothly.
	Obviously, however, all issues are coming from Maven/Gradle, and I still cannot understand how to format the Maven POM or the build.gradle.
	There MUST be an easier way to deploy Java projects.... If anyone has any insight into this I am open to any suggestions.
	I'm probably going to give up on CI though. It's definitely nice for large projects, but Java does not seem to want to work with my CI.
	Removing all CI dependencies now, and closing all running CI environments.
	Pushed updates to Git.

[5/18/2017-17:02 pre-alpha Sergix]
	Updated Gradle Builds.
	The Travis CI at least WORKS now... sort of. I don't think it's actually building/deploying anything, as every time gradle runs it just reports "UP-TO-DATE" for everything...
	Working and past builds can be viewed at https://travis-ci.org/Sergix/JTerm
	Edited the directories for the java package.
	Pushed updates to Git.
	
[5/18/2017-17:02 pre-alpha Sergix]
	Created gradle dependencies.
	Pushed updates to Git.
	
[5/18/2017-16:46 pre-alpha Sergix]
	Been messing around with getting Travis CI to automate build tests for the project.
	Attempting to get Gradle to work.... with not much luck yet.
	Moved some directories around to hopefully work with the integrated builds.
	Pushed updates to Git.

[5/17/2017-22:03 pre-alpha Sergix]
	Finished the WriteFile class.
	Uploaded files to the Write-File branch.
	Opened a PR to merge to master.
	Pushed to GitHub.
	
[5/17/2017-21:38 pre-alpha Sergix]
	Added a logo to the readme, viewable online.
	Also added a project page at https://sergix.github.io/projects/jterm/index.html

[5/17/2017-21:38 pre-alpha Sergix]
	Added a logo to the readme, viewable online.
	Also added a project page at https://sergix.github.io/projects/jterm/index.html

[5/16/2017-20:47 pre-alpha Sergix]
	Created Write.java class file.
	Adds writing to files.
	Created "write" command in terminal.
	Pushed to Write-File GitHub branch.

[5/16/2017-19:52 pre-alpha Sergix]
	Uploaded pre-release jar.
	No big changes in source code since last update.
	Changed .gitignore to not ignore .jars.
	Pushed to GitHub along with associated source and changelog.

[5/16/2017-19:09 pre-alpha Sergix]
	Finally reformatted the directory.
	Created a 'jterm' subfolder under /src that is used as the 'package' directory for eclipse.
	Class files are generated in the /src/jterm folder (the same folder as the source files).
	Went ahead and removed compile.bat, as it is now useless. :P
	Added some comments to JTerm.java for more explanation.
	Created a .gitignore for files. NOTE: zipped files (.rar, .zip) can no longer be uploaded. Create a separate branch for changes.
	Updated the README for a change in the "Changelog" section: changelog entries must be indented (as now shown.) This adds for better readability.
	Pushed updates to GitHub.

[5/16/2017-17:36 pre-alpha Sergix]
	Edited uploaded files by NCSGeek.
	Eclipse generated some weird files... gonna have to rework the directory.

[5/16/2017-17:05 pre-alpha Sergix]
	Created classpath and source directory.
	Created .vscode settings folder for VSCode preferences.
	compile.bat automatically builds classes and runs it in the console.
	Only issue at the moment is getting JARs to work for a console application, if it is even possible. Typically JARs are only used for GUI applications.
	Pushed updates to GitHub.

[5/15/2017-8:55 pre-alpha Sergix]
	Uploaded the global changelog file to the project.
	Changed README.md "Changelog" section to require username in changelog entries.
	New entires in the changelog must be placed at the top of the file, rather than the bottom.
	Renamed my GitHub profile to simply "Sergix" rather than "Sergix7440."
